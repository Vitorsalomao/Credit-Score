import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split, KFold, StratifiedKFold
from sklearn.preprocessing import StandardScaler
from mpl_toolkits.mplot3d import Axes3D
import seaborn as sns
import os
import time
import warnings
warnings.filterwarnings('ignore')

# Modelos
from sklearn.linear_model import LogisticRegression #Logística
from sklearn.tree import DecisionTreeClassifier, plot_tree # Árvore
from sklearn.ensemble import RandomForestClassifier # Random Forest
import xgboost as xgb #XGBoost
from sklearn.ensemble import GradientBoostingClassifier # Gradient Boosting Machine

# Métricas
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix, roc_curve, roc_auc_score
from scipy.stats import kstest, ks_2samp
from scipy.interpolate import interp1d
from imblearn.over_sampling import SMOTE
from imblearn.under_sampling import RandomUnderSampler
from statistics import mean


X = data.drop(columns = ['class'], axis = 1)
y = data['class']
X_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y ,test_size= 0.2, random_state=101)
smote = SMOTE(random_state=101)
X_train_resampled, y_train_resampled = smote.fit_resample(X_train, y_train)


data = pd.read_csv('/content/data.csv', sep=',')
data = data.drop( columns = ['ID'])
columns_normal = ['Duração do empréstimo (meses)', 'Limite de crédito', 'Taxa de Juros', 'Tempo de Residência (Anos)', 'Idade', 'Cartões de Crédito', 'Número de dependentes']
data[columns_normal] = StandardScaler().fit_transform(data[columns_normal])

X = data.drop(columns = ['class'], axis = 1)
y = data['class']
X_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y ,test_size= 0.2, random_state=101)
smote = SMOTE(random_state=101)
X_train_resampled, y_train_resampled = smote.fit_resample(X_train, y_train)
